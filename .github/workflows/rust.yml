name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  RUSTFLAGS: -Dwarnings
  CARGO_TERM_COLOR: always

jobs:
  # Depends on all action sthat are required for a "successful" CI run.
  tests-pass:
    name: all jobs pass
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
      - docs
      - build-mac
      - build-linux
      - nupkg
    steps:
      - run: exit 0

  test:
    name: test pitaya
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Rust
        run: rustup update stable

      - name: Install cargo-make
        run: cargo install cargo-make

      - name: test pitaya
        run: |
          makers deps
          cargo test
          makers undeps

  build-mac:
    name: build pitaya for mac
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Rust
        run: rustup update stable

      - name: Install fmt
        run: rustup component add rustfmt

      - name: Build Pitaya
        run: cargo build --release

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: libpitaya.dylib
          path: target/release/libpitaya.dylib

  build-linux:
    name: build pitaya for linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Rust
        run: rustup update stable

      - name: Build Pitaya
        run: cargo build --release

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: libpitaya.so
          path: target/release/libpitaya.so

  lint:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install Rust
        run: rustup update stable
      - name: Install clippy
        run: rustup component add clippy

      # Check fmt
      - name: "rustfmt --check"
        run: cargo fmt -- --check

      # Run clippy
      - name: "clippy --all"
        run: cargo clippy --all --tests

  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: "doc --lib --all-features"
        run: cargo doc --lib --no-deps --all-features
        env:
          RUSTDOCFLAGS: --cfg docsrs

  nupkg:
    name: create nupkg
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
      - docs
      - build-linux
      - build-mac
    steps:
      # Download Mac binary
      - uses: actions/download-artifact@v2
        with:
          name: libpitaya.so
          path: target/release

      # Download Libnux binary
      - uses: actions/download-artifact@v2
        with:
          name: libpitaya.dylib
          path: target/release

      - name: "build c#"
        run: |
          pwd
          ls
          ls target
          cd pitaya-sharp/NPitaya
          dotnet build -c Release
          dotnet pack -C Release

      - name: Upload NuPkg
        uses: actions/upload-artifact@v2
        with:
          name: NPitaya.0.12.0.nupkg
          path: pitaya-sharp/NPitaya/bin/Release/NPitaya.0.12.0.nupkg
